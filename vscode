{
  "emmet.enabled": false,
  "workbench.tips.enabled": false,
  "vim.leader": "<space>",
  "vim.useSystemClipboard": true,
  "vim.hlsearch": true,
  "vim.incsearch": true,
  "vim.easymotion": true,
  "vim.sneak": true,
  "vim.visualstar": true,
  "vim.handleKeys": {
    "<C-d>": true,
    "<C-w>": true,
    "<C-u>": true
  },

  // Add highlighted yank settings
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 200,
  "vim.highlightedyank.color": "rgba(250, 240, 170, 0.5)",

  "editor.lineNumbers": "relative",

  // Visual settings
  "editor.fontSize": 14,
  "editor.fontFamily": "JetBrainsMono Nerd Font",

  // LSP-like settings
  "editor.formatOnSave": true,
  "editor.suggestSelection": "first",

  "workbench.colorTheme": "Tokyo Night",
  "workbench.editor.showTabs": "single",
  "workbench.activityBar.location": "hidden",
  "git.openRepositoryInParentFolders": "never",
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"],
      "commands": ["workbench.action.files.save"]
    },
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // Toggle left sidebar (Explorer, SCM, etc.)
    {
      "before": ["<leader>", "["],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },

    // Toggle right sidebar (Outline, etc.)
    {
      "before": ["<leader>", "]"],
      "commands": ["workbench.action.toggleAuxiliaryBar"]
    },

    // Focus primary sidebar when open
    {
      "before": ["<leader>", "{"],
      "commands": ["workbench.action.focusSideBar"]
    },

    // Focus secondary sidebar when open
    {
      "before": ["<leader>", "}"],
      "commands": ["workbench.action.focusAuxiliaryBar"]
    },
    // Create vertical split
    {
      "before": ["<leader>", "|"],
      "commands": ["workbench.action.splitEditorRight"]
    },
    // File explorer (like Neo-tree)
    {
      "before": ["<leader>", "E"],
      "commands": ["workbench.view.explorer"]
    },
    // Git view
    {
      "before": ["<leader>", "g", "g"],
      "commands": ["workbench.view.scm"]
    },
    // Find files (like Telescope)
    {
      "before": ["<leader>", "f", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    // Find in files (grep)
    {
      "before": ["<leader>", "f", "g"],
      "commands": ["workbench.action.findInFiles"]
    },
    // Buffer management
    {
      "before": ["<leader>", "b", "b"],
      "commands": ["workbench.action.showAllEditorsByMostRecentlyUsed"]
    },
    // LSP actions
    {
      "before": ["g", "d"],
      "commands": ["editor.action.revealDefinition"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.goToReferences"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    // Terminal
    {
      "before": ["<leader>", "t", "t"],
      "commands": ["workbench.action.terminal.toggleTerminal"]
    },
    // Dashboard
    {
      "before": ["<leader>", "d"],
      "commands": ["workbench.view.extension.dashboard-webview"]
    },
    // Focus editor
    {
      "before": ["<leader>", "o"],
      "commands": ["workbench.action.focusActiveEditorGroup"]
    },
    {
      "before": ["<C-e>"],
      "commands": ["workbench.action.showAllEditorsByMostRecentlyUsed"]
    },
    // Save file
    {
      "before": ["<leader>", "w"],
      "commands": ["workbench.action.files.save"]
    },
    // Close panel
    {
      "before": ["<leader>", "t", "c"],
      "commands": ["workbench.action.closePanel"]
    },
    // Focus breadcrumb navigation
    {
      "before": ["<leader>", "e", "e"],
      "commands": ["breadcrumbs.focus"]
    },
    // Auto import - trigger "Add Missing Imports" source action
    {
      "before": ["<leader>", "l", "s"],
      "commands": [
        {
          "command": "editor.action.sourceAction",
          "args": {
            "kind": "source.addMissingImports",
            "apply": "first"
          }
        }
      ]
    }
  ],

  "vim.visualModeKeyBindingsNonRecursive": [
    // Stay in visual mode when indenting
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    }
  ],
  "window.commandCenter": false,
  // Set Prettier as default formatter for various file types
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript.module]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[graphql]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "files.associations": {
    "*.mjs": "javascript.module",
    "*.cjs": "javascript"
  },
  "prettier.documentSelectors": [
    "**/*.{ts,tsx,js,jsx,json,html,css,scss,md,yaml,yml,mjs,cjs}"
  ]
}
